name: Deploy to Nuget

# Run workflow on every push to the master branch
on:
  create:
    branches: 
      - release/*
  push:
    branches:
    - master
    
jobs:
  deploy-to-nuget:
    env:
      NUGET_NAME: '**\*.nupkg'
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
      # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2

    - name: Get Build Version
      run: |
        Import-Module .\.github\build\GetBuildVersion.psm1
        Write-Host $Env:GITHUB_REF
        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    
      # sets up .NET Core SDK 6
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: src/Cropper.Blazor
      
    - name: Build
      run: dotnet build -p:Version="$BUILD_VERSION" --no-restore
      working-directory: src/Cropper.Blazor
      
    - name: Test
      run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:ExcludeByAttribute='ExcludeFromCodeCoverage' /p:SkipAutoProps=true /p:Exclude="[*]Cropper.Blazor.Testing.*"
      working-directory: src/Cropper.Blazor/Cropper.Blazor.UnitTests    
      
    - name: Coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Push to NuGet
      if: startsWith(github.ref, 'refs/heads/release')
      run: dotnet nuget push "$(env:NUGET_NAME)" -Source "https://api.nuget.org/v3/index.json" -ApiKey ${{secrets.NUGET_API_KEY}}
      working-directory: src/Cropper.Blazor/Cropper.Blazor
