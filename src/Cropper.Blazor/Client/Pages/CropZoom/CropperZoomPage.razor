@page "/examples/zooming"
@using Cropper.Blazor.Client.Models;
@using Cropper.Blazor.Client.Pages.CropZoom.Examples

<SeoHeader Title="Zoom - Cropper.Blazor"
           Overview="Zoom Cropper.Blazor."
           Keywords="@(
            new []
            {
                "Zoomable",
                "Zoom the image",
                "Zoom",
                "Zoom Cropper.Blazor",
                "Zoom Cropper",
                "Zoom image Cropper.Blazor",
                "Zoom image Cropper",
                "Zoom image Blazor",
                "Wheel Zoom Ratio",
                "Relative Zoom",
                "Absolute Zoom",
                "Min and Max Zoom Ratio",
                "Min Zoom Ratio",
                "Max Zoom Ratio"
            })" />

<DocsPage>
    <DocsPageHeader Title="Zoom the image" SubTitle="Enable to zoom the image." />
    <DocsPageContent>

        <DocsPageSection>
            <MudText Typo="Typo.h6" GutterBottom="true">Q&A</MudText>
            <div class="d-flex flex-row mt-2">
                <MudIcon Icon="@Icons.Material.Filled.Circle" Size="Size.Small" />
                <MudText Class="ml-2" style="line-height: normal;">How to crop a new area after zooming in or zooming out?</MudText>
            </div>
            <MudText Class="ml-7 mt-2">Just <b>double-click</b> your mouse to enter crop mode.</MudText>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Zoomable">
                <Description>
                    You can use <CodeInline>Zoomable</CodeInline> boolean field in the
                    <CodeInline><MudLink UserAttributes="@(new Dictionary<string, object>(){ {"rel", "noopener"} })" Target="_blank" Href="/contract/Options">Options</MudLink></CodeInline> property to enable/disable to zoom the image.
                    <br><br>
                    You can use <CodeInline>ZoomOnTouch</CodeInline> boolean field in the
                    <CodeInline><MudLink UserAttributes="@(new Dictionary<string, object>(){ {"rel", "noopener"} })" Target="_blank" Href="/contract/Options">Options</MudLink></CodeInline> property to enable/disable to
                    zoom the image by <b>dragging touch</b>.
                    <br><br>
                    Boolean field <CodeInline>ZoomOnWheel</CodeInline> used to enable/disable
                    zoom the image by <b>mouse wheeling</b>.
                </Description>
            </SectionHeader>
            <SectionContent Code="ZoomableExample">
                <ZoomableExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Wheel Zoom Ratio">
                <Description>
                    Use decimal field <CodeInline>WheelZoomRatio</CodeInline> in the
                    <CodeInline><MudLink UserAttributes="@(new Dictionary<string, object>(){ {"rel", "noopener"} })" Target="_blank" Href="/contract/Options">Options</MudLink></CodeInline> cropper component property
                    to define zoom ratio when zooming the image by <b>mouse wheeling</b>.
                    <br><br>
                    By default, <CodeInline>WheelZoomRatio</CodeInline> is 0,1.
                </Description>
            </SectionHeader>
            <SectionContent Code="WheelZoomRatioExample">
                <WheelZoomRatioExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Relative Zoom">
                <Description>
                    For zoom the canvas (image wrapper) with a <b>relative</b> ratio
                    use <CodeInline Class="docs-code-warning">Zoom(<CodeInline>ratio</CodeInline>)</CodeInline>
                    <CodeInline Tag="true">CropperComponent</CodeInline> method, where 
                    <CodeInline>ratio</CodeInline> parameter is decimal number.
                    <br>
                    <MudList>
                        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small" IconColor="Color.Primary">
                            <b>Zoom in</b>: requires a positive number (<CodeInline>ratio</CodeInline> &gt; 0)
                        </MudListItem>
                        <MudListItem Icon="@Icons.Material.Filled.Circle" IconSize="Size.Small" IconColor="Color.Secondary">
                            <b>Zoom out</b>: requires a negative number (<CodeInline>ratio</CodeInline> &lt; 0)
                        </MudListItem>
                    </MudList>
                </Description>
            </SectionHeader>
            <SectionContent Code="RelativeZoomExample">
                <RelativeZoomExample />
            </SectionContent>
        </DocsPageSection>


        <DocsPageSection>
            <SectionHeader Title="Absolute Zoom">
                <Description>
                    For zoom the canvas (image wrapper) with a <b>relative</b> ratio
                    use <CodeInline Class="docs-code-warning">ZoomTo(<CodeInline>ratio, pivotX, pivotY</CodeInline>)</CodeInline>
                    <CodeInline Tag="true">CropperComponent</CodeInline> method, where <CodeInline>ratio</CodeInline> 
                    parameter is <b>positive (ratio &gt; 0) decimal</b> number. <CodeInline>pivotX</CodeInline> and <CodeInline>pivotY</CodeInline>
                    parameters is the decimal coordinates of the center point for zooming, base on the top left corner of the cropper container.
                    <br><br>
                    In the example, іmage zoomed to 50% from the center of the container.
                </Description>
            </SectionHeader>
            <SectionContent Code="AbsoluteZoomExample">
                <AbsoluteZoomExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Min & Max Zoom Ratio">
                <Description>
                    You can override the <CodeInline Class="docs-code-tertiary">OnZoomEvent</CodeInline> to establish minimum and/or
                    maximum ratio limits for zooming the canvas by preventing the default logic.
                    <br>
                    To override the <CodeInline Class="docs-code-tertiary">OnZoomEvent</CodeInline> event, you need to use 
                    <b>JavaScript</b>, in which you assign a new function to the 
                    <CodeInline>window</CodeInline>.<CodeInline>cropper</CodeInline>.<CodeInline Class="docs-code-warning">onZoom</CodeInline> event.
                    An example of an event override is shown below.
                    <MudAlert Class="my-3" Severity="Severity.Warning">
                        Make sure that the <b>current Zoom Ratio</b> value is less than the minimum value,
                        otherwise this setting may not work correctly.
                    </MudAlert>
                </Description>
            </SectionHeader>
            <SectionContent Codes="@(new[] {new CodeFile("Cropper.razor", "MinMaxZoomRatioExample"), new CodeFile("script.js", "MinMaxZoomRatio_Script")})">
                <MinMaxZoomRatioExample />
            </SectionContent>
        </DocsPageSection>

    </DocsPageContent>
</DocsPage>
