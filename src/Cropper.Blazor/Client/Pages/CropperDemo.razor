@page "/demo"
@using Cropper.Blazor.Client.Components
@using Cropper.Blazor.Components
@using Cropper.Blazor.Extensions;
@using Cropper.Blazor.Models

<MudContainer Class="@((Start.Equals(Breakpoint.Xl) || Start.Equals(Breakpoint.Xxl) ? "mud-container-maxwidth-xl " : "") + "mt-5")">
    <MudGrid Class="mt-2">
        @*//---Cropper Component---//*@
        <MudItem xxl="7" xl="9" lg="9" md="9" sm="12" xs="12">
            <MudPaper Class="pa-4" Elevation="2">
                <div class="@GetClassNameCropper()">
                    <CropperComponent Class="cropper-container"
                                      ErrorLoadImageClass="cropper-error-load"
                                      @ref="CropperComponent"
                                      OnCropStartEvent="OnCropStartEvent"
                                      OnCropEndEvent="OnCropEndEvent"
                                      OnCropEvent="OnCropEvent"
                                      OnZoomEvent="OnZoomEvent"
                                      OnCropMoveEvent="OnCropMoveEvent"
                                      OnReadyEvent="OnCropReadyEvent"
                                      OnLoadImageEvent="OnLoadImageEvent"
                                      Src="@Src"
                                      InputAttributes="@InputAttributes"
                                      ErrorLoadImageSrc="@_errorLoadImageSrc"
                                      IsErrorLoadImage="@IsErrorLoadImage"
                                      OnErrorLoadImageEvent="OnErrorLoadImageEvent"
                                      Options="Options"
                                      IsAvaibleInitCropper="IsAvaibleInitCropper" />
                </div>
            </MudPaper>
        </MudItem>
        @*//---Img preview and data---//*@
        <MudItem xxl="5" xl="3" lg="3" md="3" sm="12" xs="12">
            <MudPaper Class="pa-4 d-flex flex-column justify-center mud-height-full" Elevation="2">
                <div class="d-flex flex-row flex-wrap justify-center gap-1 mb-2 mh-100">
                    <div class="img-preview preview-lg"></div>
                    <div class="d-flex flex-row flex-wrap gap-1">
                        <div class="img-preview preview-md"></div>
                        <div class="d-flex flex-column flex-wrap align-center gap-1">
                            <div class="img-preview preview-sm"></div>
                            <div class="img-preview preview-xs"></div>
                        </div>
                    </div>
                </div>
                <div class="docs-data">
                    <CropperDataPreview @ref="CropperDataPreview"></CropperDataPreview>
                </div>
            </MudPaper>
        </MudItem>
        @*//---Buttons for test cropper functional---//*@
        <MudItem xxl="8" xl="7" lg="7" md="7" sm="12" xs="12">
            <MudPaper Class="pa-4 d-flex flex-row flex-wrap gap-x-2 gap-y-4  justify-center" Elevation="2">

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="@("cropper.setDragMode(\"move\")")">
                        <MudToggleIconButton Icon="@Icons.Material.Filled.OpenWith" ToggledIcon="@Icons.Material.Filled.OpenWith"
                                             ToggledColor="@Color.Dark" Title="Move" ToggledChanged="SetMoveDragMode" />
                    </MudTooltip>
                    <MudTooltip Text="@("cropper.setDragMode(\"crop\")")">
                        <MudToggleIconButton Icon="@Icons.Material.Filled.Crop" ToggledIcon="@Icons.Material.Filled.Crop"
                                             ToggledColor="@Color.Dark" Title="Crop" ToggledChanged="SetCropDragMode" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="Zoom In">
                        <MudIconButton Icon="@Icons.Material.Filled.ZoomIn" OnClick="@(()=>Zoom(0.1m))" Title="Zoom In" />
                    </MudTooltip>
                    <MudTooltip Text="Zoom Out">
                        <MudIconButton Icon="@Icons.Material.Filled.ZoomOut" OnClick="@(()=>Zoom(-0.1m))" Title="Zoom Out" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="cropper.move(-10, 0)">
                        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="@(()=>Move(-10, 0))" Title="Move Left" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.move(10, 0)">
                        <MudIconButton Icon="@Icons.Material.Filled.ArrowRightAlt" OnClick="@(()=>Move(10, 0))" Title="Move Right" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.move(0, -10)">
                        <MudIconButton Icon="@Icons.Material.Filled.ArrowUpward" OnClick="@(()=>Move(0, -10))" Title="Move Up" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.move(0, 10)">
                        <MudIconButton Icon="@Icons.Material.Filled.ArrowDownward" OnClick="@(()=>Move(0, 10))" Title="Move Down" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="cropper.rotate(-45)">
                        <MudIconButton Icon="@Icons.Material.Filled.RotateLeft" OnClick="@(()=>Rotate(-45))" Title="Rotate Left" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.rotate(45)">
                        <MudIconButton Icon="@Icons.Material.Filled.RotateRight" OnClick="@(()=>Rotate(45))" Title="Rotate Right" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="cropper.scaleX(-1)">
                        <MudIconButton Icon="@Icons.Material.Filled.SwapHoriz" OnClick="@(()=>ScaleX(-1m*ScaleXValue))" Title="Flip Horizontal" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.scaleY(-1)">
                        <MudIconButton Icon="@Icons.Material.Filled.SwapVert" OnClick="@(()=>ScaleY(-1m*ScaleYValue))" Title="Flip Vertical" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="cropper.crop()">
                        <MudIconButton Icon="@Icons.Material.Filled.Done" OnClick="Crop" Title="Crop" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.clear()">
                        <MudIconButton Icon="@Icons.Material.Filled.Clear" OnClick="Clear" Title="Clear" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="cropper.disable()">
                        <MudIconButton Icon="@Icons.Material.Filled.Lock" OnClick="Disable" Title="Disable" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.enable()">
                        <MudIconButton Icon="@Icons.Material.Filled.LockOpen" OnClick="Enable" Title="Enable" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                    <MudTooltip Text="cropper.reset()">
                        <MudIconButton Icon="@Icons.Material.Filled.Sync" OnClick="Reset" Title="Reset" />
                    </MudTooltip>
                    <MudTooltip Text="Import image with Blob URLs">
                        <InputFile id="imageInput" OnChange="InputFileChangeAsync" accept="image/*" hidden multiple />
                        <MudIconButton HtmlTag="label" Icon="@Icons.Material.Filled.PhotoCamera" for="imageInput" Title="Upload image file" />
                    </MudTooltip>
                    <MudTooltip Text="Replace image with Blob URLs">
                        <InputFile id="imageReplaceInput" OnChange="ReplaceImageAsync" accept="image/*" hidden multiple />
                        <MudIconButton HtmlTag="label" Icon="@Icons.Material.Filled.FindReplace" for="imageReplaceInput" Title="Replace image file" />
                    </MudTooltip>
                    <MudTooltip Text="cropper.destroy()">
                        <MudIconButton Icon="@Icons.Material.Filled.PowerOff" OnClick="Destroy" Title="Destroy" />
                    </MudTooltip>
                </MudButtonGroup>

                <MudTooltip Text="cropper.moveTo(0)">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>MoveTo(0, 0))">
                        Move to [0,0]
                    </MudButton>
                </MudTooltip>
                <MudTooltip Text="cropper.zoomTo(1)">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>ZoomTo(1, 0, 0))">
                        Zoom to 100%
                    </MudButton>
                </MudTooltip>
                <MudTooltip Text="cropper.rotateTo(180)">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>Rotate(180))" StartIcon="@Icons.Material.Filled.RotateRight">
                        180&#176;
                    </MudButton>
                </MudTooltip>
                <MudTooltip Text="cropper.scale(-2, -1)">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>Scale(-2 * ScaleXValue, -1 * ScaleYValue))">
                        Scale (-2, -1)
                    </MudButton>
                </MudTooltip>
                <MudTooltip Text="cropper.getCroppedCanvasDataURL({ maxWidth: 4096, maxHeight: 4096 }, 'image/png', 1)">
                    <MudButton Color="Color.Secondary" Variant="Variant.Filled"
                               OnClick="@(()=>GetCroppedCanvasDataURL(new GetCroppedCanvasOptions(){ MaxHeight = 4096, MaxWidth = 4096, ImageSmoothingQuality = ImageSmoothingQuality.High.ToEnumString() }))">
                        Get Cropped Canvas by URL
                    </MudButton>
                </MudTooltip>
                <MudTooltip Text="cropper.getCroppedCanvasData({ maxWidth: 4096, maxHeight: 4096 }, 'image/png', 1)">
                    <MudButton Color="Color.Secondary" Variant="Variant.Filled"
                               OnClick="@(()=>GetCroppedCanvasData(new GetCroppedCanvasOptions(){ MaxHeight = 4096, MaxWidth = 4096, ImageSmoothingQuality = ImageSmoothingQuality.High.ToEnumString() }))">
                        Get Cropped Canvas by element
                    </MudButton>
                </MudTooltip>
                <MudButtonGroup Color="Color.Secondary" Variant="Variant.Filled">
                    <MudTooltip Text="cropper.getCroppedCanvasDataURL({ width: 320, height: 180 }, 'image/png', 1)">
                        <MudButton OnClick="@(()=>GetCroppedCanvasDataURL(new GetCroppedCanvasOptions(){ MaxHeight = 180, MaxWidth = 320, ImageSmoothingQuality = ImageSmoothingQuality.High.ToEnumString() }))">
                            320&times;180
                        </MudButton>
                    </MudTooltip>
                    <MudTooltip Text="cropper.getCroppedCanvasData({ width: 640, height: 360 }, 'image/png', 1)">
                        <MudButton OnClick="@(()=>GetCroppedCanvasData(new GetCroppedCanvasOptions(){ MaxHeight = 360, MaxWidth = 480, ImageSmoothingQuality = ImageSmoothingQuality.High.ToEnumString() }))">
                            640&times;360
                        </MudButton>
                    </MudTooltip>
                </MudButtonGroup>
            </MudPaper>
        </MudItem>
        @*//---Aspect Ratio | View Mode | Get Cropped Canvas---//*@
        <MudItem xxl="4" xl="5" lg="5" md="5" sm="12" xs="12">
            <MudPaper Class="pa-4 d-flex flex-column justify-center gap-4 mud-height-full" Elevation="2">
                <MudBreakpointProvider>
                    <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                        <MudButtonGroup Color="Color.Success" Variant="Variant.Filled" OverrideStyles="false" Class="mud-width-full">
                            <MudTooltip Text="aspectRatio: 16 / 9" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(1.7777777777777777m))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(AspectRatio == 1.7777777777777777m  && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    16:9
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: 4 / 3" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(1.3333333333333333m))" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(AspectRatio == 1.3333333333333333m  && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    4:3
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: 1 / 1" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(1m))" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(AspectRatio == 1m  && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    1:1
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: 2 / 3" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(0.6666666666666666m))" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(AspectRatio == 0.6666666666666666m && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    2:3
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: NaN" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetFreeAspectRatio())" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    Free
                                </MudButton>
                            </MudTooltip>
                        </MudButtonGroup>
                        <MudButtonGroup Color="Color.Success" Variant="Variant.Filled" OverrideStyles="false" Class="mud-width-full">
                            <MudTooltip Text="View Mode 0" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm0))" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(Options.ViewMode == ViewMode.Vm0 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM0
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="View Mode 1" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm1))" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(Options.ViewMode == ViewMode.Vm1 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM1
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="View Mode 2" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm2))" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(Options.ViewMode == ViewMode.Vm2 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM2
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="View Mode 3" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm3))" Color="Color.Success" Variant="Variant.Filled" Class="ml-0"
                                           Style="@(Options.ViewMode == ViewMode.Vm3 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM3
                                </MudButton>
                            </MudTooltip>
                        </MudButtonGroup>
                        <MudButtonGroup Color="Color.Success" Variant="Variant.Filled" OverrideStyles="false" Class="mud-width-full">
                            <MudTooltip Text="Default (Rectangle)" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Default))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.CropFree"
                                               Style="@(CropperFace == Enums.CropperFace.Default ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Close" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Close))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.Close"
                                               Style="@(CropperFace == Enums.CropperFace.Close ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Pentagon" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Pentagon))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.Pentagon"
                                               Style="@(CropperFace == Enums.CropperFace.Pentagon ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Circle" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Circle))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.Circle"
                                               Style="@(CropperFace == Enums.CropperFace.Circle ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Arrow" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Arrow))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.ArrowBack"
                                               Style="@(CropperFace == Enums.CropperFace.Arrow ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Get cropped image with polygon filter" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>GetCroppedCanvasDataByPolygonFilter(new GetCroppedCanvasOptions(){ MaxHeight = 4096, MaxWidth = 4096, ImageSmoothingQuality = ImageSmoothingQuality.High.ToEnumString() }))"
                                           Color="Color.Error"
                                           Variant="Variant.Filled"
                                           Class="ml-0 mud-width-full">
                                    GET
                                </MudButton>
                            </MudTooltip>
                        </MudButtonGroup>
                    </MudHidden>
                    <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                        <MudButtonGroup Color="Color.Success" VerticalAlign="true" Variant="Variant.Filled" OverrideStyles="false" Class="mud-width-full">
                            <MudTooltip Text="aspectRatio: 16 / 9" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(1.7777777777777777m))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(AspectRatio == 1.7777777777777777m && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    16:9
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: 4 / 3" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(1.3333333333333333m))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(AspectRatio == 1.3333333333333333m && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    4:3
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: 1 / 1" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(1m))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(AspectRatio == 1m && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    1:1
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: 2 / 3" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetAspectRatio(0.6666666666666666m))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(AspectRatio == 0.6666666666666666m && !IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    2:3
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="aspectRatio: NaN" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetFreeAspectRatio())" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(IsEnableAspectRatioSettings ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    Free
                                </MudButton>
                            </MudTooltip>
                        </MudButtonGroup>
                        <MudButtonGroup Color="Color.Success" VerticalAlign="true" Variant="Variant.Filled" OverrideStyles="false" Class="mud-width-full">
                            <MudTooltip Text="View Mode 0" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm0))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(Options.ViewMode == ViewMode.Vm0 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM0
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="View Mode 1" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm1))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(Options.ViewMode == ViewMode.Vm1 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM1
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="View Mode 2" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm2))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(Options.ViewMode == ViewMode.Vm2 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM2
                                </MudButton>
                            </MudTooltip>
                            <MudTooltip Text="View Mode 3" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>SetViewMode(ViewMode.Vm3))" Color="Color.Success" Variant="Variant.Filled"
                                           Style="@(Options.ViewMode == ViewMode.Vm3 ? "background-color: var(--mud-palette-success-darken)" : "")" FullWidth="true">
                                    VM3
                                </MudButton>
                            </MudTooltip>
                        </MudButtonGroup>
                        <MudButtonGroup VerticalAlign="true" Color="Color.Success" Variant="Variant.Filled" OverrideStyles="false" Class="mud-width-full">
                            <MudTooltip Text="Default (Rectangle)" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Default))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.CropFree"
                                               Style="@(CropperFace == Enums.CropperFace.Default ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Close" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Close))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.Close"
                                               Style="@(CropperFace == Enums.CropperFace.Close ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Pentagon" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Pentagon))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.Pentagon"
                                               Style="@(CropperFace == Enums.CropperFace.Pentagon ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Circle" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Circle))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.Circle"
                                               Style="@(CropperFace == Enums.CropperFace.Circle ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Arrow" RootClass="mud-width-full">
                                <MudIconButton OnClick="@(()=>SetCropperFace(Enums.CropperFace.Arrow))"
                                               Color="Color.Success"
                                               Variant="Variant.Filled"
                                               Class="ml-0 mud-width-full"
                                               Icon="@Icons.Material.Filled.ArrowBack"
                                               Style="@(CropperFace == Enums.CropperFace.Arrow ? "background-color: var(--mud-palette-success-darken)" : "")" />
                            </MudTooltip>
                            <MudTooltip Text="Get cropped image with polygon filter" RootClass="mud-width-full">
                                <MudButton OnClick="@(()=>GetCroppedCanvasDataByPolygonFilter(new GetCroppedCanvasOptions(){ MaxHeight = 4096, MaxWidth = 4096, ImageSmoothingQuality = ImageSmoothingQuality.High.ToEnumString() }))"
                                           Color="Color.Error"
                                           Variant="Variant.Filled"
                                           Class="ml-0 mud-width-full">
                                    GET
                                </MudButton>
                            </MudTooltip>
                        </MudButtonGroup>
                    </MudHidden>
                    <MudMenu Dense="true" Class="mud-width-full" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                        <ActivatorContent>
                            <MudTooltip RootClass="mud-width-full" Text="Toggle options with three state options - default (null), true, false">
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" FullWidth="true">Toggle Options</MudButton>
                            </MudTooltip>
                        </ActivatorContent>
                        <ChildContent>
                            <MudList Clickable="true" Dense="true">
                                @foreach (var item in Options.GetType().GetProperties().Where(p => p.PropertyType == typeof(bool?)))
                                {
                                    <MudListItem>
                                        <MudCheckBox Label="@item.Name" Size="Size.Small" Dense="true" TriState="true" Checked="(bool?)item.GetValue(Options, null)"
                                                 CheckedChanged="@((bool? newValue) => OptionsChecked(item.Name, newValue))" />
                                    </MudListItem>
                                }
                            </MudList>
                        </ChildContent>
                    </MudMenu>
                </MudBreakpointProvider>
            </MudPaper>
        </MudItem>
        @*//+---// Get/Set all cropper data //---+//*@
        <CascadingValue Value="@Reset" IsFixed="true" Name="ResetCropperAction">
            <CascadingValue Value="@AspectRatio" Name="AspectRatio">
                <CascadingValue Value="@IsEnableAspectRatioSettings" Name="IsEnableAspectRatioSettings">
                    <CascadingValue Value="@CropperComponent" Name="CropperComponent">
                        <GetSetCropperData GetCanvasData="GetCanvasDataAsync"
                                           GetCropBoxData="GetCropBoxDataAsync"
                                           GetData="GetDataAsync"
                                           GetImageData="GetImageDataAsync"
                                           GetContainerData="GetContainerDataAsync"
                                           SetCanvasDataOptions="SetCanvasData"
                                           SetDataOptions="SetData"
                                           SetCropBoxDataOptions="SetCropBoxData"
                                           @ref="GetSetCropperData" />
                    </CascadingValue>
                </CascadingValue>
            </CascadingValue>
        </CascadingValue>
    </MudGrid>
</MudContainer>
