@using Cropper.Blazor.Client.Extensions;
@using Cropper.Blazor.Models;
@using Cropper.Blazor.Shared.Extensions;

@if (_nonnullableType.IsEnum)
{
    <MudTooltip>
        <ChildContent>@Type.GetTypeDisplayName()</ChildContent>
        <TooltipContent>
            enumeration type
            <MudText Align="Align.Left" Typo="Typo.body2">
                @foreach (var name in Enum.GetNames(_nonnullableType))
                {
                    @(_nonnullableType.Name + "." + name)

                    <br />
                }
            </MudText>
        </TooltipContent>
    </MudTooltip>
}
else
{
    string contextType = Type.GetContextType();

    if (contextType == string.Empty)
    {
        @TypeNameHelper.GetTypeDisplay(Type, false, true)
    }
    else
    {
        @(new MarkupString(contextType))
    }
}

@code {
    [Parameter] public Type Type { get; set; }

    private Type _nonnullableType;

    protected override void OnInitialized()
    {
        _nonnullableType = Nullable.GetUnderlyingType(Type) ?? Type;
    }
}