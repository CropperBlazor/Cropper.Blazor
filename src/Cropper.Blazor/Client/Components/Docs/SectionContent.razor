@using System;
@using System.IO;
@using System.Linq;
@using System.Text.RegularExpressions;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Components;
@using Cropper.Blazor.Client.Extensions;
@using Cropper.Blazor.Client.Models;
@using MudBlazor;

@if ((Codes != null || ChildContent != null) && !IsOnlySingleSectionCode)
{
    <div class="@Classname">
        @if (Codes != null || ChildContent != null)
        {
            <MudToolBar Class="@ToolbarClassname">
                <MudButtonGroup Color="Color.Primary" Class="mud-width-full"
                                Variant="Variant.Text" VerticalAlign="IsVerticalAlign"
                                Style="border-radius: 8px 8px 0 0">
                    @if (Codes != null)
                    {
                        @foreach (var codefile in Codes)
                        {
                            <MudButton Class="@GetActiveCode(codefile.code)"
                                       OnClick="@(() => SetActiveCode(codefile.code))"
                                       Style="word-break: break-word;"
                                       Size="Size.Small">
                                @codefile.title
                            </MudButton>
                        }
                    }

                    @if (!IsVerticalAlign)
                    {
                        <MudSpacer />
                    }

                    @if (HasCode && ChildContent != null)
                    {
                        <MudButton OnClick="OnShowCode"
                                   StartIcon="@(ShowCode ? @Icons.Material.Rounded.CodeOff : Icons.Material.Rounded.Code)"
                                   Size="Size.Small">
                            @(ShowCode ? "Hide code" : "Show code")
                        </MudButton>
                    }
                </MudButtonGroup>
            </MudToolBar>
        }
        @if (ChildContent != null)
        {
            <div class="@InnerClassname">
                @ChildContent
            </div>
        }
    </div>
}
@if (HasCode || IsOnlySingleSectionCode)
{
    <SectionCode SourceClassname="@SourceClassname" CopyTextToClipboard="CopyTextToClipboardAsync">
        <CodeComponent>
            @CodeComponent(ActiveCode)
        </CodeComponent>
    </SectionCode>
}
