@using MudBlazor.Utilities
@using System;
@using System.IO;
@using System.Linq;
@using System.Text.RegularExpressions;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Components;
@using Cropper.Blazor.Client.Extensions;
@using Cropper.Blazor.Client.Models;

@if (Codes != null || ChildContent != null)
{
    <div class="@Classname">
        @if (Codes != null || ChildContent != null)
        {
            <MudToolBar Class="@ToolbarClassname">
                @if(Codes != null)
                {
                    @foreach (var codefile in Codes)
                    {
                        <MudButton Class="@GetActiveCode(codefile.code)" OnClick="@(() => SetActiveCode(codefile.code))" Size="Size.Small">@codefile.title</MudButton>
                    }
                }
                <MudSpacer/>
                @if (_hasCode && ChildContent != null)
                {
                    <MudButton OnClick="OnShowCode" StartIcon="@(ShowCode ? @Icons.Rounded.CodeOff : Icons.Rounded.Code)" Color="Color.Default" Size="Size.Small">
                        @(ShowCode ? "Hide code" : "Show code")
                    </MudButton>
                }
            </MudToolBar>
        }
        @if (ChildContent != null)
        {
            <div class="@InnerClassname">
                @ChildContent
            </div>
        }
    </div>
}
@if (_hasCode)
{
    <div class="@SourceClassname">
        <div class="docs-section-source-container">
            @CodeComponent(_activeCode)
        </div>
        <MudIconButton Icon="@Icons.Material.Outlined.FileCopy" Size="Size.Small" Class="copy-code-button" @onclick="CopyTextToClipboard" />
    </div>
}