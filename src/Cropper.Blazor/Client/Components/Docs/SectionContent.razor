@using System;
@using System.IO;
@using System.Linq;
@using System.Text.RegularExpressions;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Components;
@using Cropper.Blazor.Client.Extensions;
@using Cropper.Blazor.Client.Models;
@using MudBlazor;

@if ((Codes != null || ChildContent != null) && !IsOnlySingleSectionCode)
{
    <div class="@Classname" style="@Style">
        @if (Codes != null || ChildContent != null)
        {
            <MudToolBar Class="@ToolbarClassname" WrapContent="IsVerticalAlign">
                @if (Codes != null)
                {
                    @foreach (var codefile in Codes)
                    {
                        <MudButton Class="@GetActiveCode(codefile.code)"
                                   Variant="@(IsVerticalAlign ? Variant.Filled : Variant.Text)"
                                   Color="@(IsVerticalAlign ? Color.Primary : Color.Default)"
                                   FullWidth="IsVerticalAlign"
                                   OnClick="@(() => SetActiveCode(codefile.code))"
                                   Style="word-break: break-word;"
                                   Size="Size.Small">
                            @codefile.title
                        </MudButton>
                    }
                }

                @if (!IsVerticalAlign)
                {
                    <MudSpacer />
                }

                @if (HasCode && ChildContent != null)
                {
                    <MudButton OnClick="OnShowCode"
                               FullWidth="IsVerticalAlign"
                               StartIcon="@(ShowCode ? @Icons.Material.Rounded.CodeOff : Icons.Material.Rounded.Code)"
                               Size="Size.Small">
                        @(ShowCode ? "Hide code" : "Show code")
                    </MudButton>
                }
            </MudToolBar>
        }
        @if (ChildContent != null)
        {
            <div class="@InnerClassname">
                @ChildContent
            </div>
        }
    </div>
}
@if (HasCode || IsOnlySingleSectionCode)
{
    <SectionCode SourceClassname="@SourceClassname" CopyTextToClipboard="CopyTextToClipboardAsync">
        <CodeComponent>
            @CodeComponent(ActiveCode)
        </CodeComponent>
    </SectionCode>
}
